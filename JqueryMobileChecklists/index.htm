
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />

		<title>Mobile Checklists</title>

		<link rel="stylesheet" href="themes/blue-and-orange.css" />
		<link rel="stylesheet" href="http://code.jquery.com/mobile/1.2.0/jquery.mobile.structure-1.2.0.min.css" />
		<!-- <link rel="stylesheet" href="http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.css" /> -->

		<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
		<script>

			var isDebug1 = false;
			var isDebug2 = false;

			$(document).ready(function() {
				// alert("ready!");
				$("#add-new-list-link-button").click(function(e) {
					// e.preventDefault();	
					addNewList();
				});

				var listsFromSession = sessionStorage.getItem("list_names");
				if(isDebug1) { alert("lists from session = " + listsFromSession); }

				showCurrentLists(listsFromSession);
				initListDetails(listsFromSession);
			});



			function initListDetails(listsFromSession) {
				"use strict";
				var listDetails = {};
				if(listsFromSession != null) {
					var listNames = listsFromSession.split(",");

					for(var i = 0; i < listNames.length; i++) {
						var currentListDetails = sessionStorage.getItem(listNames[i]);
						if(isDebug1) { alert("Current list details from session for: " + listNames[i] + " = " + currentListDetails); }
						sessionStorage.setItem(listNames[i], "Wash Car");
					}
				}
			}



			function showCurrentLists(listsFromSession) {
				"use strict";
				// remove old list if exists
				$('ul#list-names').children("li").remove();

				// show current list
				if(listsFromSession) {
					var rawLists = listsFromSession.split(",");
					var lists = rawLists.filter(function(v) { return(v);});

					for(var i in lists) {
						// alert(lists[i]);
						var javascriptAttribute = "onclick=\"javascript:setCheckListName('" + lists[i] + "');\" ";
						var listItem = "<li><a href='#page-view-checklist' " + javascriptAttribute + ">" + lists[i] + "</a></li>";
						$('ul#list-names').append(listItem);
					}
				}
			}



			function updateLists(currentNames, newListName) {
				"use strict";
				var updatedList = "";

				if(currentNames) {
					updatedList += (currentNames+ "," + newListName);
				} else {
					updatedList = newListName;
				}

				sessionStorage.setItem("list_names", updatedList);
				var listNamesInSession = sessionStorage.getItem("list_names");
				if(isDebug1) { alert("updateLists - list names in session after update = " + listNamesInSession); }


				// add to front page
				/// var listItem = "<li><a href='#page-view-checklist'>" + newListName + "</a></li>";
				/// $('ul#list-names').append(listItem);
				showCurrentLists(listNamesInSession);
				$('ul#list-names').listview('refresh');
				// $('ul#list-names').append(listItem).parent().trigger('create');

				return updatedList;
			}



			function addNewList() {
				"use strict";
				if(isDebug1) { alert("addNewList ..."); }
				var newListName = $("#new-list-name").val();
				if(isDebug2) { alert("new list name = " + newListName); }
				$("#new-list-name").val("");   // clear values so not still sitting there next time user goes to page
				// alert("List name = " + newListName);
				var listNamesInSession = sessionStorage.getItem("list_names");
				//alert("addNewList - list names in session before update = " + listNamesInSession);
				updateLists(listNamesInSession, newListName);
				// alert("session storage latest list_names = " + sessionStorage.getItem("list_names"));
			}



			function attachNewItemToCheckList() {
				"use strict";
				if(isDebug1) { alert("Starting attachNewItemToCheckList"); }
			    var newItemText = $("#new-item-text").val();
				if(isDebug2) {alert("new item text = " + newItemText); }
				var checkListName = $("#checklist-name-id").val();
				if(isDebug2) { alert("check list name = " + checkListName); }
				var listDetailsString = sessionStorage.getItem(checkListName);
				if(isDebug2) { alert("current session items = |" + listDetailsString + "|"); }
				// alert("current session items.length = |" + listDetailsString.length + "|");
				var newListDetailsString = "";
				if(listDetailsString) {
					newListDetailsString = [listDetailsString, newItemText].join(",");
				} else {
					// typically empty string, "", if empty
					newListDetailsString = newItemText;
				}
				if(isDebug2) { alert("new list details string for session = " + newListDetailsString); }
				sessionStorage.setItem(checkListName, newListDetailsString);
				clearAndRegenerateListItems(newListDetailsString.split(","), checkListName);
			    $("#new-item-text").val("");
			}



			function removeListItem(listName, listItem) {
				"use strict";
				if(isDebug1) { alert("Removing list item: " + listItem + "   from list: " + listName); }
				var listDetailsString = sessionStorage.getItem(listName);
				var listDetails = listDetailsString.split(",");
				var newListDetails = [];

				for(var i=0; i < listDetails.length; i++) {
					var currentListItem = listDetails[i];
					if(listItem === currentListItem) {
						// do nothing
					} else {
						newListDetails.push(currentListItem);
					}
				}

				if(isDebug2) { alert("New List Details = " + newListDetails); }
				sessionStorage.setItem(listName, newListDetails.join(","));
				//$("ul#list-details").listview("refresh");     does not work - need to delete from html list first or regenerate html list before calling this  
				clearAndRegenerateListItems(newListDetails, listName);
			}



			// refresh list by deleting all current items and appending the latest updated list of items
			function clearAndRegenerateListItems(listDetails, checkListName) {
				"use strict";
				$("ul#list-details").children("li").remove();
				if(isDebug2) { alert("clearAndRegeneratListItems"); }
				if(isDebug2) { alert("clearAndRegenerateItems - list details length= " + listDetails.length); }
				for(var i=0; i < listDetails.length; i++) {
					var javaScriptOnClick = " onclick=\"javascript:removeListItem('" + checkListName + "', '" + listDetails[i] + "');\"";
					var listItem = "<li data-icon='minus'><a href='#page-view-checklist' " + javaScriptOnClick + ">" + listDetails[i]  + "</a></li>";
					$("ul#list-details").append(listItem);
				}

				$("ul#list-details").listview("refresh");
			}



			function setCheckListName(checkListName) {
				"use strict";
				if(isDebug1) {alert("setting checklist-name-id to = " + checkListName); }
				$("#checklist-name-id").val(checkListName);
				$("#checklist-name-label").text(checkListName);   // can use 'html' if contains markup
				var listDetailsString = sessionStorage.getItem(checkListName);
				if(isDebug2) { alert("setCheckListName - listDetailsString = |" + listDetailsString + "|"); }
				var listDetails = new Array();
				if(listDetailsString) {
					listDetails = listDetailsString.split(",");
				}	
				if(isDebug2) { alert("setCheckListName - listDetails = " + listDetails); }
				clearAndRegenerateListItems(listDetails, checkListName);
			}



			function addToCheckList() {
				"use strict";
				if(isDebug1) { alert("Starting addToCheckList ..."); }
				var checkListName = $("#checklist-name-id").val();
				if(isDebug2) { alert("addToCheckList - check list name = " + checkListName); }
			}



			function deleteCheckList() {
				"use strict";
				if(isDebug1) { alert("Deleting checklist"); }
				var checkListName = $("#checklist-name-id").val();
				if(isDebug2) { alert("deleteChecklist - Deleting checklist = " + checkListName); }
				var listsFromSession = sessionStorage.getItem("list_names");
				if(isDebug2) { alert("deleteChecklist - listFromSession = " + listsFromSession); }
				var rawLists = listsFromSession.split(",");
				if(isDebug2) { alert("deleteChecklist - rawLists = " + rawLists); }
				var listAsString = null;

				if(rawLists.length === 1) {
					listAsString = "";
				} else {
					var arrayIndex = rawLists.indexOf(checkListName);
					if(isDebug2) { alert("deleteChecklist - arrayIndex = " + arrayIndex); }

					if(arrayIndex === -1) {
						if(isDebug2) { alert("Not found: value=|" + checkListName + "|"); }
					} else {
						/// var slicedList = rawLists.slice(arrayIndex, 1);   // slice out one unwanted value
						rawLists.splice(arrayIndex, 1);   // slice out one unwanted value
						listAsString = rawLists.join(",");
						if(isDebug2) { alert("deleteChecklist - list as string = " + listAsString); }
						sessionStorage.setItem("list_names", listAsString);
					}
				}
				// $('ul#list-names').listview('refresh');   $('ul#list-names').trigger('refresh');

				showCurrentLists(listAsString);
				$('ul#list-names').listview('refresh');
			}

		</script>
		<script src="http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.js"></script>   <!-- place this below custom javascript so latest items will be styled right -->
		<style media="only screen and (max-width: 480px)">
			* {	
				color:yellow;
			}
		</style>
	</head>


	<body>
		<div>
			<h1>Mobile Checklists</h1>

			<!-- Page showing overview of lists -->
			<div data-role="page" id="page1" data-theme="a">
				<div data-role="header">
					Your Checklists
				</div>

				<br />

				<div data-role="content">
					<ul id="list-names" data-role="listview" data-inset="true" data-filter="true">
						<li id="first-item"><a href="#page-view-checklist" onclick="javascript:setCheckListName('grocery');">Grocery Store</a></li>
					</ul>

					<br />

					<a href="#page-add-list" data-role="button" data-transition="flow" data-icon="plus" data-iconpos="right" data-mini="false" data-inline="true">Add</a>
				</div><!-- /content -->
			</div><!-- /page -->

			<br />

			<!-- Page to add new list -->
			<div data-role="page" id="page-add-list" data-theme="a">
				<div data-role="header">
					<label>Enter New List Name</label>
				</div>
				<div data-role="content">
					<input type="text" id="new-list-name" placeholder="Enter new list name" spellcheck="true" />
					<br />
					<a id="add-new-list-link-button" href="#page1" data-role="button" data-transition="flow" data-icon="plus" data-iconpos="top" data-mini="false" data-inline="false" >Add</a>
				</div>
			</div>


			<div data-role="page" id="page-view-checklist" data-theme="a">
				<div data-role="header">
					<h1>Mobile Checklists</h1>
				</div>

				<div data-role="content">
					<p>Checklist:  <label id="checklist-name-label"></label></p>
					<input type="hidden" id="checklist-name-id" value="nothing" />

					<ul id="list-details" data-role="listview" data-inset="true" data-filter="false">
						<li data-icon="minus"><a href="#">Check Messages</a></li>
					</ul>

					<br />
					<br />

					<a href="#page-add-item" data-role="button" data-transition="flow" data-icon="add" data-iconpos="bottom" data-inline="false" data-mini="true" onclick="javascript:addToCheckList();">Add</a>
					<a href="#page1" data-role="button" data-transition="flow" data-icon="back" data-iconpos="bottom" data-inline="false" data-mini="true">Back</a>
					<a href="#page1" data-role="button" data-transition="flow" data-icon="delete" data-iconpos="bottom" data-inline="false" data-mini="true" onclick="javascript:deleteCheckList();" >Delete this list</a>
				</div><!-- /content -->
			</div><!-- /page -->


			<!-- Page to add new list -->
			<div data-role="page" id="page-add-item" data-theme="a">
				<div data-role="header">
					<label>New List Item</label>
				</div>

				<div data-role="content">
					<input type="text" id="new-item-text" placeholder="Enter new list item" spellcheck="true" />
					<br />
					<a id="add-new-item-link-button" href="#page-view-checklist" data-role="button" data-transition="flow" data-icon="plus" data-iconpos="top" data-mini="false" data-inline="false" onclick="javascript:attachNewItemToCheckList();">Add</a>
					<a href="#page-view-checklist" data-role="button" data-transition="flow" data-icon="back" data-iconpos="bottom" data-inline="false" data-mini="true">Cancel</a>
				</div>
			</div> <!-- page -->

		</div>
	</body>
</html>


